/**
 * _theme-base.scss
 * Base theme styles for Material Design 3 (Material You) in web components.
 * Maps MD3 color roles (CSS custom properties like --md-sys-color-*) to component classes.
 * Ensures each role is applied to components with proper contrast per Material 3 guidelines.
 *
 * Primary roles are for key UI elements (e.g. FAB, prominent buttons, active states, 
 * and tinting elevated surfaces)&#8203;:contentReference[oaicite:0]{index=0}. Secondary roles apply to less prominent components 
 * (e.g. filter chips)&#8203;:contentReference[oaicite:1]{index=1}, and Tertiary roles serve as contrasting accents&#8203;:contentReference[oaicite:2]{index=2}.
 * "On-<role>" colors are used for text/icons on those colored surfaces, providing sufficient contrast.
 */
 
// Global base styles – apply background and on-background for app scaffold
body {
    background-color: var(--md-sys-color-background);
    color: var(--md-sys-color-on-background);
    margin: 0;
    /* The body uses background and on-background to ensure readable default text on the app background */
  }
  
  // Buttons – styles for various Material 3 button types (text, elevated, filled, tonal, outlined, etc.)
  .mdc-button {
    // Common base button styles (shape, padding, typography)
    border-radius: 20px;              // Fully rounded corners (MD3 buttons are pill-shaped at 40dp height&#8203;:contentReference[oaicite:3]{index=3})
    padding: 8px 16px;                // Vertical and horizontal padding for button content
    font: inherit;                    // Use inherited font (Material 3 uses design token for typography)
    font-size: 1rem;
    line-height: 1.5;
    letter-spacing: 0.009em;
    text-transform: none;             // MD3 uses sentence case (no all-caps)
    cursor: pointer;
    transition: background-color 0.2s, color 0.2s;
    
    // Text button (default) – no container, uses primary color for text
    color: var(--md-sys-color-primary);
    background-color: transparent;
    
    // Focus outline for accessibility – uses outline color token for a visible focus ring
    &:focus-visible {
      outline: 2px solid var(--md-sys-color-outline);
      outline-offset: 2px;
    }
  
    // Elevated button (mdc-button--raised) – uses a lighter container with shadow
    &.mdc-button--raised {
      background-color: var(--md-sys-color-primary-container);   // lighter tonal background for elevated button&#8203;:contentReference[oaicite:4]{index=4}
      color: var(--md-sys-color-on-primary-container);           // text color on tonal background
      box-shadow: 0 2px 4px var(--md-sys-color-shadow);          // use shadow color for elevation
      /* Elevated buttons are essentially filled buttons with a lighter background color and a shadow&#8203;:contentReference[oaicite:5]{index=5} */
    }
  
    // Filled button (mdc-button--unelevated) – high-emphasis, uses primary color fill
    &.mdc-button--unelevated {
      background-color: var(--md-sys-color-primary);
      color: var(--md-sys-color-on-primary);
      /* Filled buttons use the primary color, with on-primary for content, making them very prominent&#8203;:contentReference[oaicite:6]{index=6} */
    }
  
    // Filled tonal button – medium-emphasis alternative, uses secondary container fill
    &.mdc-button--tonal {
      background-color: var(--md-sys-color-secondary-container);
      color: var(--md-sys-color-on-secondary-container);
      /* Tonal buttons use a secondary hue (secondary container) for a softer emphasis than primary-filled buttons */
    }
  
    // Outlined button (mdc-button--outlined) – no fill, just outline and primary text
    &.mdc-button--outlined {
      background-color: transparent;
      color: var(--md-sys-color-primary);
      border: 1px solid var(--md-sys-color-outline);  // use outline color for the border
      /* Outlined buttons use a neutral outline stroke&#8203;:contentReference[oaicite:7]{index=7} and primary text to indicate an actionable item */
    }
  
    // Example: Error (destructive) button variant – uses error colors for destructive actions
    &.mdc-button--error {
      background-color: var(--md-sys-color-error);
      color: var(--md-sys-color-on-error);
      /* Using error and on-error for a destructive action button ensures it stands out and meets contrast requirements */
    }
  
    // Disabled state – low opacity to indicate disabled (using on-surface as base color per MD3 spec)
    &:disabled {
      background-color: var(--md-sys-color-on-surface);   // base the disabled fill on on-surface
      color: var(--md-sys-color-on-surface);
      opacity: 0.38;  // reduce opacity for disabled content (38% for text, icon; 12% typically for container)
      cursor: default;
    }
  }
  
  // Top App Bars – styles for small, medium, and large app bars (different types of top app bars)
  .mdc-top-app-bar {
    padding: 0 16px;  // horizontal padding for content (navigation icon, title, actions)
    display: flex;
    align-items: center;
    
    // Small app bar (default)
    &.small {
      height: 64px;  // default app bar height (64dp as per MD3 spec)&#8203;:contentReference[oaicite:8]{index=8}
    }
    // Medium app bar
    &.medium {
      height: 112px; // taller app bar (medium variant)
      /* Medium top app bars have a taller height to accommodate a larger title or additional content */
    }
    // Large app bar
    &.large {
      height: 128px; // large app bar height for prominent screens
      /* Large top app bars can display extended content (e.g., a longer title or subtitle) */
    }
    
    // **Color variants for app bar**:
    // Default app bar uses surface color with on-surface content for contrast
    &.surface {
      background-color: var(--md-sys-color-surface);
      color: var(--md-sys-color-on-surface);
      /* Surface app bars blend into the UI using surface color and on-surface for text/icons */
    }
    // Colored app bar (primary variant) for strong branding
    &.primary {
      background-color: var(--md-sys-color-primary);
      color: var(--md-sys-color-on-primary);
      /* Primary app bar uses the primary color to emphasize the top bar, with on-primary text for contrast */
    }
    // Alternative colored app bar (secondary variant) as needed
    &.secondary {
      background-color: var(--md-sys-color-secondary);
      color: var(--md-sys-color-on-secondary);
    }
    
    // Elevated (scrolled) state – apply a shadow or tonal overlay when app bar is elevated above content
    &.elevated {
      background-color: var(--md-sys-color-surface);           // base surface color (could also use surface-container-high)
      color: var(--md-sys-color-on-surface);
      box-shadow: 0 2px 4px var(--md-sys-color-shadow);        // drop shadow to indicate elevation
      /* An elevated app bar remains surface-colored but gains a shadow (and can include a surface tint overlay for tonal elevation) */
    }
  }
  
  // Navigation drawers (Sidebars) – styles for modal/standard navigation side panel
  .mdc-drawer {
    background-color: var(--md-sys-color-surface-container-low);
    color: var(--md-sys-color-on-surface);
    width: 360px;               // standard width for navigation drawer in MD3 spec (360dp max)&#8203;:contentReference[oaicite:9]{index=9}
    max-width: 90vw;            // responsive max width (no more than 90% of viewport on smaller screens)
    padding: 16px 0;
    box-sizing: border-box;
    /* Drawer uses a “surface container” color that’s slightly elevated above the background for separation */
    
    // Inside the drawer, use list styles (see .mdc-list below) for navigation items
    .mdc-list {
      margin: 0;
      padding: 0;
    }
    
    // The scrim (overlay behind a modal drawer) uses the scrim color with transparency
    &::backdrop {
      background-color: var(--md-sys-color-scrim);
      opacity: 0.5;
      /* Scrim provides a semi-transparent backdrop to focus attention on the open drawer */
    }
  }
  
  // Lists – styles for list containers and items (e.g., navigation lists, menus)
  .mdc-list {
    background-color: var(--md-sys-color-surface);   // list background (surface color)
    color: var(--md-sys-color-on-surface);
    margin: 0;
    padding: 8px 0;
    
    // Single list item
    .mdc-list-item {
      position: relative;
      display: flex;
      align-items: center;
      min-height: 56px;                        // standard touch target height for list items
      padding: 8px 16px;
      color: var(--md-sys-color-on-surface);   // primary text color
      
      // Leading icon/graphic in list item
      .mdc-list-item__graphic {
        color: var(--md-sys-color-on-surface-variant);  // use a slightly less emphasized color for icons
      }
      // Secondary text (for two-line list items)
      .mdc-list-item__secondary-text {
        color: var(--md-sys-color-on-surface-variant);
      }
      
      // State: selected or activated list item (e.g., current navigation destination)
      &--selected, &.mdc-list-item--activated {
        background-color: var(--md-sys-color-primary-container);
        color: var(--md-sys-color-on-primary-container);
        /* Selected list items use primary-container as a highlight background with on-primary-container text&#8203;:contentReference[oaicite:10]{index=10} */
        .mdc-list-item__graphic {
          color: var(--md-sys-color-on-primary-container);
        }
        .mdc-list-item__secondary-text {
          color: var(--md-sys-color-on-primary-container);
        }
      }
      
      // Hover and focus states for list items (give a slight surface tint or variant background for feedback)
      &:hover:not(.mdc-list-item--disabled) {
        background-color: var(--md-sys-color-surface-variant);
      }
      &:focus-visible {
        outline: 2px solid var(--md-sys-color-outline);
        outline-offset: -2px;
      }
    }
    
    // Divider lines within lists
    .mdc-list-divider {
      height: 1px;
      margin: 4px 16px;
      background-color: var(--md-sys-color-outline-variant);
      /* Use outline-variant for dividers/separators per Material 3 guidelines&#8203;:contentReference[oaicite:11]{index=11} */
    }
  }
  
  // Navigation drawer list items (within sidebars) – can override some list styles for drawer context
  .mdc-drawer .mdc-list-item {
    color: var(--md-sys-color-on-surface-variant);
    /* In a drawer, list item text/icons use on-surface-variant to be slightly subdued until selected */
    
    &--selected, &.mdc-list-item--activated {
      background-color: var(--md-sys-color-primary-container);
      color: var(--md-sys-color-on-primary-container);
      .mdc-list-item__graphic {
        color: var(--md-sys-color-on-primary-container);
      }
      .mdc-list-item__secondary-text {
        color: var(--md-sys-color-on-primary-container);
      }
      /* The selected navigation drawer item uses primary container as highlight and on-primary-container for content&#8203;:contentReference[oaicite:12]{index=12} */
    }
  }
  
  // Snackbar – uses inverse color roles for high-contrast on top of normal surfaces (typically in dark mode)
  .mdc-snackbar {
    background-color: var(--md-sys-color-inverse-surface);
    color: var(--md-sys-color-inverse-on-surface);
    border-radius: 4px;
    padding: 16px;
    
    .mdc-snackbar__label {
      color: var(--md-sys-color-inverse-on-surface);
    }
    .mdc-snackbar__action {
      color: var(--md-sys-color-inverse-primary);
    }
    /* According to Material 3, a snackbar uses inverse surface for its background, inverse on-surface for text, 
       and inverse primary for action buttons to ensure it is legible on top of the app's content&#8203;:contentReference[oaicite:13]{index=13} */
  }
  
  // **Additional Notes:** 
  // - The color roles primary-fixed, secondary-fixed, tertiary-fixed, etc., are used in dynamic color schemes 
  //   to maintain consistent tones in light vs. dark mode. These can be applied similarly if needed (e.g., for surfaces).
  // - All color combinations above follow Material 3 contrast requirements (e.g., using the appropriate "on-*" color 
  //   for text/icons on a given background) to maintain accessibility.
  // - Spacing and sizing use Material 3's design tokens (4dp grid) for padding, margins, and component dimensions.
  